/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as StoreIndexRouteImport } from './routes/store/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as DashboardCreateStoreRouteImport } from './routes/dashboard/create-store'

const StoreIndexRoute = StoreIndexRouteImport.update({
  id: '/store/',
  path: '/store/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardCreateStoreRoute = DashboardCreateStoreRouteImport.update({
  id: '/dashboard/create-store',
  path: '/dashboard/create-store',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/dashboard/create-store': typeof DashboardCreateStoreRoute
  '/dashboard': typeof DashboardIndexRoute
  '/store': typeof StoreIndexRoute
}
export interface FileRoutesByTo {
  '/dashboard/create-store': typeof DashboardCreateStoreRoute
  '/dashboard': typeof DashboardIndexRoute
  '/store': typeof StoreIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/dashboard/create-store': typeof DashboardCreateStoreRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/store/': typeof StoreIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/dashboard/create-store' | '/dashboard' | '/store'
  fileRoutesByTo: FileRoutesByTo
  to: '/dashboard/create-store' | '/dashboard' | '/store'
  id: '__root__' | '/dashboard/create-store' | '/dashboard/' | '/store/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  DashboardCreateStoreRoute: typeof DashboardCreateStoreRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  StoreIndexRoute: typeof StoreIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/store/': {
      id: '/store/'
      path: '/store'
      fullPath: '/store'
      preLoaderRoute: typeof StoreIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/create-store': {
      id: '/dashboard/create-store'
      path: '/dashboard/create-store'
      fullPath: '/dashboard/create-store'
      preLoaderRoute: typeof DashboardCreateStoreRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  DashboardCreateStoreRoute: DashboardCreateStoreRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  StoreIndexRoute: StoreIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
